diff --git a/CocosDenshion/CDAudioManager.m b/CocosDenshion/CDAudioManager.m
index a3dc78a..977eeb8 100644
--- a/CocosDenshion/CDAudioManager.m
+++ b/CocosDenshion/CDAudioManager.m
@@ -818,13 +818,13 @@ static BOOL configured = FALSE;
 // iOS >= 6.0 only
 - (void)interruption:(NSNotification*)notification
 {
-    NSDictionary *interuptionDict = notification.userInfo;
+    /*NSDictionary *interuptionDict = notification.userInfo;
     NSUInteger interuptionType = (NSUInteger)[interuptionDict valueForKey:AVAudioSessionInterruptionTypeKey];
     
     if (interuptionType == AVAudioSessionInterruptionTypeBegan)
         [self beginInterruption];
     else if (interuptionType == AVAudioSessionInterruptionTypeEnded)
-        [self endInterruptionWithOptions:(AVAudioSessionInterruptionOptions)[interuptionDict valueForKey:AVAudioSessionInterruptionOptionKey]];
+        [self endInterruptionWithOptions:(AVAudioSessionInterruptionOptions)[interuptionDict valueForKey:AVAudioSessionInterruptionOptionKey]];*/
 }
 
 @end
diff --git a/cocos2d/CCGLProgram.m b/cocos2d/CCGLProgram.m
index 59075fd..f593115 100644
--- a/cocos2d/CCGLProgram.m
+++ b/cocos2d/CCGLProgram.m
@@ -29,6 +29,7 @@
 #import "CCGLProgram.h"
 #import "ccGLStateCache.h"
 #import "ccMacros.h"
+#import "ccUtils.h"
 #import "Support/CCFileUtils.h"
 #import "Support/uthash.h"
 #import "Support/OpenGL_Internal.h"
@@ -143,32 +144,48 @@ typedef void (*GLLogFunction) (GLuint program,
 
 - (BOOL)compileShader:(GLuint *)shader type:(GLenum)type byteArray:(const GLchar *)source
 {
-    GLint status;
+	GLint status;
 
-    if (!source)
-        return NO;
-		
-		const GLchar *sources[] = {
+	if (!source)
+		return NO;
+
+	const GLchar *lastExtension = ccLastStrStr(source, "#extension");
+	GLchar *extensions = NULL;
+	if (lastExtension)
+	{
+		const GLchar *sourceOld = source;
+		source = strstr(lastExtension, "\n");
+		size_t copySize = (size_t)(source - sourceOld) + 1;
+		extensions = (GLchar *)malloc(copySize + 1);
+		strncpy(extensions, sourceOld, copySize);
+		extensions[copySize] = '\0';
+	}
+
+	const GLchar *sources[] = {
+		extensions ? extensions : "\n",
 #ifdef __CC_PLATFORM_IOS
-			(type == GL_VERTEX_SHADER ? "precision highp float;\n" : "precision mediump float;\n"),
+		(type == GL_VERTEX_SHADER ? "precision highp float;\n" : "precision mediump float;\n"),
 #endif
-			"uniform mat4 CC_PMatrix;\n"
-			"uniform mat4 CC_MVMatrix;\n"
-			"uniform mat4 CC_MVPMatrix;\n"
-			"uniform vec4 CC_Time;\n"
-			"uniform vec4 CC_SinTime;\n"
-			"uniform vec4 CC_CosTime;\n"
-			"uniform vec4 CC_Random01;\n"
-			"//CC INCLUDES END\n\n",
-			source,
-		};
-		
-    *shader = glCreateShader(type);
-    glShaderSource(*shader, sizeof(sources)/sizeof(*sources), sources, NULL);
-    glCompileShader(*shader);
-	
-    glGetShaderiv(*shader, GL_COMPILE_STATUS, &status);
-	
+		"uniform mat4 CC_PMatrix;\n"
+		"uniform mat4 CC_MVMatrix;\n"
+		"uniform mat4 CC_MVPMatrix;\n"
+		"uniform vec4 CC_Time;\n"
+		"uniform vec4 CC_SinTime;\n"
+		"uniform vec4 CC_CosTime;\n"
+		"uniform vec4 CC_Random01;\n"
+		"//CC INCLUDES END\n\n",
+		source,
+	};
+
+	*shader = glCreateShader(type);
+	glShaderSource(*shader, sizeof(sources)/sizeof(*sources), sources, NULL);
+	glCompileShader(*shader);
+
+	glGetShaderiv(*shader, GL_COMPILE_STATUS, &status);
+
+	if (extensions)
+		free(extensions);
+
 	if( ! status ) {
 		GLsizei length;
 		glGetShaderiv(*shader, GL_SHADER_SOURCE_LENGTH, &length);
diff --git a/cocos2d/Support/ccUtils.c b/cocos2d/Support/ccUtils.c
index 27a122d..82a8aa5 100644
--- a/cocos2d/Support/ccUtils.c
+++ b/cocos2d/Support/ccUtils.c
@@ -6,6 +6,8 @@
 /*
  ccNextPOT function is licensed under the same license that is used in CCTexture2D.m.
  */
+#include <stdlib.h>
+#include <string.h>
 #include "ccUtils.h"
 
 unsigned long ccNextPOT(unsigned long x)
@@ -18,3 +20,24 @@ unsigned long ccNextPOT(unsigned long x)
     x = x | (x >>16);
     return x + 1;
 }
+
+const char *ccLastStrStr(const char *haystack, const char *needle)
+{
+    if (*needle == '\0')
+        return (char *) haystack;
+    
+    char *result = NULL;
+    for (;;)
+    {
+        char *p = strstr(haystack, needle);
+        
+        if (p == NULL)
+            break;
+        
+        result = p;
+        
+        haystack = p + 1;
+    }
+    
+    return result;
+}
diff --git a/cocos2d/Support/ccUtils.h b/cocos2d/Support/ccUtils.h
index 5f84ff3..18b392a 100644
--- a/cocos2d/Support/ccUtils.h
+++ b/cocos2d/Support/ccUtils.h
@@ -28,6 +28,8 @@ extern "C" {
  @since v0.99.5
  */
 unsigned long ccNextPOT( unsigned long value );
+    
+const char *ccLastStrStr(const char *haystack, const char *needle);
 
 #ifdef __cplusplus
 }
